#!/bin/bash

#SBATCH --account=d403-wt
#SBATCH --job-name=arraybench
#SBATCH --time=01:00:00
#SBATCH --nodes=1
#SBATCH --partition=gpu
#SBATCH --qos=gpu
#SBATCH --gres=gpu:1
#SBATCH --exclusive


#SBATCH --output=%x_%j.out

module load gcc
module load intel-license
module load intel-20.4/cc
module load intel-20.4/fc
module load intel-20.4/compilers 
module load mpt
module load nvidia/nvhpc
module load openmpi/4.1.6
module load python
# module load anaconda3
export OMP_NUM_THREADS=1

# Capture the SLURM job ID
JOB_ID=$SLURM_JOB_ID

# Create a directory with the job ID
mkdir -p Raw_data/${JOB_ID}
mkdir -p Plots/${JOB_ID}
mkdir -p Scripts
cat $0 > Scripts/${JOB_ID}.job

export MPLCONFIGDIR=/work/d403/d403/weiyu2024/PhDProject/epcc-openmp-microbenchmarks/openmpbench_C_v40/Plots

# Iterate over IDA and delaytime values
# for IDA in 1 3 9 27 81 243 729 2187 6561 19683 59049; do

for IDA in 1 3; do

    # File to store results for the current IDA value
    output_file=Raw_data/${JOB_ID}/arraybench_${IDA}.out

    # Clear previous data for this IDA, if any (to ensure fresh start for each IDA)
    : > $output_file

    # for delaytime in 0.01 0.05 0.1 0.5 1 5 10 50 100 500; do
        for delaytime in 0.01 0.05 ; do

        echo "arraybench_($IDA)_$delaytime"  # Just to ensure there is a newline at the end of the file, if needed
        echo "************************************************************************************************************************************************************************" >> $output_file
        # Direct the output of srun into the appropriate file in the raw_data directory
        srun arraybench_$IDA --measureonly PRIVATE --outer-repetitions 1000 --test-time 1000.00 --delay-time $delaytime >> $output_file
        echo ""  # Just to ensure there is a newline at the end of the file, if needed
    done
    # Save the script to the Script directory after each IDA loop iteration
    python visualise.py $output_file Plots/${JOB_ID}/arraybench_${IDA}.png
done